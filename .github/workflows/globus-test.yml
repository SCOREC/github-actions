name: Globus-Systems

on:
  workflow_call:
    inputs:
      machine:
        required: true
        type: string

concurrency:
  group: systems-${{ github.event.repository.name }}
  cancel-in-progress: true

jobs:
  run-globus:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:

    - name: checkout repo
      uses: actions/checkout@v4

    - name: find directory
      run:
        pwd
        ls

    - name: checkout globus file
      uses: actions/checkout@v4
      with:
        repository: SCOREC/github-actions
        path: ${{ github.event.repository.name }}/.github/workflows
        sparse-checkout: |
          run-globus.py
        sparse-checkout-cone-mode: false

    - name: setup python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    # - name: install packing
    #   run: sudo apt install python3-packaging

    # - name: install globus
    #   run: |
    #       python -m ensurepip --upgrade --user
    #       python -m pip install globus-compute-endpoint

    # - name: use globus
    #   working-directory: ${{ github.event.repository.name }}/.github/workflows
    #   env:
    #     GLOBUS_ID: ${{ secrets.GLOBUS_COMPUTE_ID }}
    #     GLOBUS_SECRET: ${{ secrets.GLOBUS_COMPUTE_SECRET }}
    #   run: |
    #     export GLOBUS_COMPUTE_CLIENT_ID="$GLOBUS_ID"
    #     export GLOBUS_COMPUTE_CLIENT_SECRET="$GLOBUS_SECRET"
    #     if [ ${{ inputs.machine }} == "perlmutter" ]; then TARGET_ENDPOINT=0dd4499a-8d76-4977-bae9-841e4bb2f616; fi
    #     if [ ${{ inputs.machine }} == "frontier" ]; then TARGET_ENDPOINT=d625c6cf-de7a-4228-ac44-56247a642fe0; fi
    #     python run-globus.py ${{ inputs.machine }} ${{ github.event.repository.name }} ${{ github.sha }} $TARGET_ENDPOINT

    # - name: print build log
    #   working-directory: ${{ github.event.repository.name }}/.github/workflows
    #   run: cat Build.log

    # - name: print test log
    #   working-directory: ${{ github.event.repository.name }}/.github/workflows
    #   run: cat Test.log

    # - name: check failed test
    #   working-directory: ${{ github.event.repository.name }}/.github/workflows
    #   run: if grep "Failed" Test.log; then return 1; fi
